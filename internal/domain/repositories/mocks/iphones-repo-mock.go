// Code generated by MockGen. DO NOT EDIT.
// Source: iphones-repo.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	models "iFall/internal/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPhoneRepository is a mock of IPhoneRepository interface.
type MockIPhoneRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPhoneRepositoryMockRecorder
}

// MockIPhoneRepositoryMockRecorder is the mock recorder for MockIPhoneRepository.
type MockIPhoneRepositoryMockRecorder struct {
	mock *MockIPhoneRepository
}

// NewMockIPhoneRepository creates a new mock instance.
func NewMockIPhoneRepository(ctrl *gomock.Controller) *MockIPhoneRepository {
	mock := &MockIPhoneRepository{ctrl: ctrl}
	mock.recorder = &MockIPhoneRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPhoneRepository) EXPECT() *MockIPhoneRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIPhoneRepository) Get(ctx context.Context, id string) (*models.IPhone, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*models.IPhone)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIPhoneRepositoryMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPhoneRepository)(nil).Get), ctx, id)
}

// Update mocks base method.
func (m *MockIPhoneRepository) Update(ctx context.Context, id string, price float64) (*models.IPhone, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, id, price)
	ret0, _ := ret[0].(*models.IPhone)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockIPhoneRepositoryMockRecorder) Update(ctx, id, price interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIPhoneRepository)(nil).Update), ctx, id, price)
}
