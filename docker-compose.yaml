services:
  ifall:
    build: ./
    env_file:
      - .env
    volumes:
      - ./logs/:/logs/
      - ./storage:/storage/
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    networks:
      - app-network
    stop_grace_period: 5s

  # postgres:
  #   image: postgres:latest
  #   volumes:
  #     - .db/postgres/data:/var/lib/postgresql/data
  #   env_file:
  #     - .env
  #   ports:
  #     - ${POSTGRES_PORT}:5432
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     interval: 10s
  #     retries: 5
  #     start_period: 30s
  #     timeout: 10s
  #   networks:
  #     - app-network
  #   stop_grace_period: 5s

  migrate:
    build: ./
    env_file:
      - .env
    volumes:
      - ./internal/migrations:/migrations
    entrypoint: ["goose", "-dir", "/migrations"]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    external: false